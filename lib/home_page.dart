import 'package:flutter/material.dart';import 'package:tasksobes/db_service.dart';class HomePage extends StatefulWidget {  const HomePage({Key? key}) : super(key: key);  @override  State<HomePage> createState() => _HomePageState();}class _HomePageState extends State<HomePage> {  int index = 1;  Repository repo = Repository();  int page = 1;  List<Map> history = [];  @override  void initState() {    super.initState();    read();    print(history);    // history = ;  }  void read() {    index = int.parse(repo.readIndex() ?? 1);    history = repo.getAll() ?? [];    setState(() {});  }  @override  Widget build(BuildContext context) {    return Scaffold(      drawer: Drawer(        child: SingleChildScrollView(          child: Padding(            padding: EdgeInsets.symmetric(horizontal: 10, vertical: MediaQuery.of(context).viewPadding.top),            child: Wrap(              direction: Axis.vertical,              children: List.generate(                  history.length,                  (index) => Row(                        children: [                          Text(                            history[index].keys == 1                                ? "Hello World"                                : "Bye "                                    "World --- ${history[index].values.toString()}",                            maxLines: 1,                            overflow: TextOverflow.ellipsis,                          )                        ],                      )),            ),          ),        ),      ),      appBar: AppBar(        backgroundColor: page != 1            ? index == 2                ? Colors.black                : Colors.white            : Colors.white,        title: Text(          " ${page == 1 ? "First" : "Second"} Page",          style: TextStyle(            color: page == 2                ? index == 2                    ? Colors.white                    : Colors.black                : Colors.black,          ),        ),      ),      body: PageView(        onPageChanged: (s) {          page = s + 1;          setState(() {});        },        children: [          Column(            mainAxisAlignment: MainAxisAlignment.spaceEvenly,            children: [              Row(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  const Text("Hello World"),                  const SizedBox(                    width: 10,                  ),                  Switch(                      value: index == 1,                      onChanged: (s) {                        if (index == 1) {                          ScaffoldMessenger.of(context).showSnackBar(                              SnackBar(content: Text("${DateTime.now()} ${index == 1 ? "Hello world" : "Bye World"}")));                          repo.add(2);                          read();                        } else {                          ScaffoldMessenger.of(context).showSnackBar(                              SnackBar(content: Text("${DateTime.now()} ${index == 2 ? "Hello world" : "Bye World"}")));                          repo.add(1);                          read();                        }                      }),                ],              ),              Row(                mainAxisAlignment: MainAxisAlignment.center,                children: [                  const Text("Bye World"),                  const SizedBox(                    width: 10,                  ),                  Switch(                      value: index == 2,                      onChanged: (s) {                        ScaffoldMessenger.of(context).showSnackBar(                            SnackBar(content: Text("${DateTime.now()} ${index == 2 ? "Hello world" : "Bye World"}")));                        repo.add(2);                        read();                      })                ],              ),            ],          ),          Container(            alignment: Alignment.center,            color: index != 1 ? Colors.black : Colors.white,            child: Text(              index == 1 ? "Hello World" : "ByeWorld",              style: TextStyle(fontSize: 25, color: index != 1 ? Colors.white : Colors.black),            ),          )        ],      ),    );  }}